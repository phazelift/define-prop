// Generated by CoffeeScript 1.10.0
(function() {
  var deepFreeze, defineProp, types,
    slice = [].slice;

  types = require('types.js');

  deepFreeze = require('deep-freeze');

  defineProp = function() {
    var descriptor, key, object, settings, value;
    object = arguments[0], key = arguments[1], value = arguments[2], settings = 4 <= arguments.length ? slice.call(arguments, 3) : [];
    if (!(key = types.forceString(key))) {
      defineProp.log('define-prop: error, invalid or missing key!');
      return;
    }
    if (types.notFunction(object) && (typeof object !== 'object')) {
      defineProp.log('define-prop: error, invalid or missing object!');
      return;
    }
    descriptor = {
      enumerable: ~settings.indexOf('enumerable')
    };
    if ((types.isObject(value)) && (types.hasFunction(value.get, value.set))) {
      descriptor.get = types.forceFunction(value.get);
      descriptor.set = types.forceFunction(value.set);
    } else {
      descriptor.value = value;
      descriptor.configurable = ~settings.indexOf('configurable');
      descriptor.writable = ~settings.indexOf('writable');
      if (!descriptor.writable) {
        descriptor.value = deepFreeze(descriptor.value);
      }
    }
    Object.defineProperty(object, key, descriptor);
    return object;
  };

  defineProp.log = typeof console !== "undefined" && console !== null ? console.log : void 0;

  module.exports = defineProp;

}).call(this);
